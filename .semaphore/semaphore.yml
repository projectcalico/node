version: v1.0
name: node
agent:
  machine:
    type: e1-standard-4
    os_image: ubuntu1804
execution_time_limit:
  minutes: 120
global_job_config:
  prologue:
    commands:
      - checkout
      # Semaphore is doing shallow clone on a commit without tags.
      # unshallow it for GIT_VERSION:=$(shell git describe --tags --dirty --always) @ Makefile.common
      - git fetch --unshallow

blocks:

# Run the full set of tests. Each job can potentially be run in parallel,
# provided Semaphore has enough boxes available.
- name: "Tests"
  execution_time_limit:
    # Semaphore's default is 1 hour, and these tests take about that time or a little
    # longer.
    minutes: 90
  dependencies: []
  task:
    jobs:
    - name: "make ci"
      commands:
      - make ci
    - name: "make k8s-test"
      commands:
      - make k8s-test

# If tests passed, then build and push images.
# We'll only do this on non-PR builds, where we have credentials to do so.
- name: "Push images (non-PR builds only)"
  skip:
    # Only run on branches, not PRs.
    when: "branch !~ '.+'"
  dependencies: ["Tests"]
  task:
    secrets:
    - name: quay-robot-calico+semaphoreci
    - name: docker
    jobs:
    - name: "make cd"
      commands:
      - echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
      - echo $QUAY_TOKEN | docker login --username "$QUAY_USER" --password-stdin quay.io
      - export BRANCH_NAME=$SEMAPHORE_GIT_BRANCH
      - if [ -z "${SEMAPHORE_GIT_PR_NUMBER}" ]; then make image-all cd CONFIRM=true; fi

# build windows release
- name: "nightly build windows release"
  dependencies: []
  task:
    jobs:
    - name: "build windows release"
      commands:
      - export BRANCH_NAME=$SEMAPHORE_GIT_BRANCH
      - make release-windows-archive VERSION=${BRANCH_NAME}

promotions:
  # Run the pin update process in case there were a backlog of pin update requests
  - name: Update Pins
    pipeline_file: update_pins.yml
    auto_promote:
      # If the block has passed and the branch is for master or a release branch then run the pin updates. Note that
      # this doesn't try to restrict which release branches, as the presence of this auto promotion code means that
      # it can handle updating the pins in this fashion.
      when: "(result = 'passed') and ((branch = 'master') or (branch =~ 'release-v\d*\.\d*'))"
