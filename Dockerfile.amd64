# Copyright (c) 2015-2019 Tigera, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
ARG BIRD_IMAGE=calico/bird:latest

FROM calico/bpftool:v5.0-amd64 as bpftool
FROM ${BIRD_IMAGE} as bird

FROM centos:8 as centos
ARG ARCH=x86_64
ARG CDN_BASE_URL=https://cdn-ubi.redhat.com/content/public/ubi/dist/ubi8/8/${ARCH}/
ARG LIBNFTNL_VER=1.1.1-4
ARG LIBNFTNL_SOURCERPM_URL=${CDN_BASE_URL}/baseos/source/SRPMS/Packages/l/libnftnl-${LIBNFTNL_VER}.el8.src.rpm
ARG LIBNFTNL_RPM_URL=${CDN_BASE_URL}/baseos/os/Packages/l/libnftnl-${LIBNFTNL_VER}.el8.${ARCH}.rpm
ARG IPTABLES_VER=1.8.2-9
ARG IPTABLES_SOURCERPM_URL=${CDN_BASE_URL}/baseos/source/SRPMS/Packages/i/iptables-${IPTABLES_VER}.el8_0.1.src.rpm
ARG RUNIT_VER=2.1.2

RUN yum update -y && \
    # Enable PowerTools repo for '-devel' packages
    dnf install -y 'dnf-command(config-manager)' && \
    dnf config-manager --set-enabled PowerTools && \
    yum update -y && \
    # Install required packages for building rpms
    yum install -y rpm-build yum-utils make && \
    # In order to rebuild the iptables RPM, we first need to rebuild the libnftnl RPM because building
    # iptables requires libnftnl-devel but that RPM is not available on Redhat's opensource registry.
    # (Note: it's not in RHEL8.1 either https://bugzilla.redhat.com/show_bug.cgi?id=1711361).
    # Rebuilding libnftnl will give us libnftnl-devel too.
    rpm -i ${LIBNFTNL_SOURCERPM_URL} && \
    yum-builddep -y --spec /root/rpmbuild/SPECS/libnftnl.spec && \
    rpmbuild -bb /root/rpmbuild/SPECS/libnftnl.spec && \
    # Now install libnftnl and libnftnl-devel
    rpm -i ${LIBNFTNL_RPM_URL} && \
    rpm -Uv /root/rpmbuild/RPMS/${ARCH}/libnftnl-devel-${LIBNFTNL_VER}.el8.${ARCH}.rpm && \
    # Install source RPM for iptables and install its build dependencies.
    rpm -i ${IPTABLES_SOURCERPM_URL} && \
    yum-builddep -y --spec /root/rpmbuild/SPECS/iptables.spec && \
    # Patch the spec so that:
    # - we keep the legacy iptables binaries
    # - and rename the legacy binaries so they use the canonical iptables binary name. I.e., iptables-legacy => iptables.
    #   (The default spec does the opposite and make the nft binaries use the default binary names.)
    sed -i '/drop all legacy tools/,/sbindir.*legacy/d' /root/rpmbuild/SPECS/iptables.spec && \
    sed -i '/rename nft versions to standard name/,/^done/c \
\# rename legacy iptable versions to standard name \n\
pfx=\%\{buildroot\}\%\{_sbindir\}\/iptables \n\
for pfx in \%\{buildroot\}\%\{_sbindir\}\/\{iptables,ip6tables\}; do \n\
    mv $pfx-legacy $pfx \n\
    mv $pfx-legacy-restore $pfx-restore \n\
    mv $pfx-legacy-save $pfx-save \n\
done' /root/rpmbuild/SPECS/iptables.spec && \
    sed -i '/%files$/a \
\%\{_sbindir\}\/xtables-legacy-multi \n\
\%\{_sbindir\}\/ip6tables-nft \n\
\%\{_sbindir\}\/ip6tables-nft-restore \n\
\%\{_sbindir\}\/ip6tables-nft-save \n\
\%\{_sbindir\}\/iptables-nft \n\
\%\{_sbindir\}\/iptables-nft-restore \n\
\%\{_sbindir\}\/iptables-nft-save \n\
' /root/rpmbuild/SPECS/iptables.spec && \
    # Finally rebuild iptables.
    rpmbuild -bb /root/rpmbuild/SPECS/iptables.spec && \
    # Install deps needed to build runit.
    yum install -y wget glibc-static gcc && \
    wget -P /tmp http://smarden.org/runit/runit-${RUNIT_VER}.tar.gz && \
    gunzip /tmp/runit-${RUNIT_VER}.tar.gz && \
    tar -xpf /tmp/runit-${RUNIT_VER}.tar -C /tmp && \
    cd /tmp/admin/runit-${RUNIT_VER}/ && \
    package/install

FROM registry.access.redhat.com/ubi8/ubi-minimal:latest
LABEL name="Calico node" \
      maintainer="laurence@tigera.io" \
      vendor="Project Calico" \
      version="v3.10.0" \
      release="1" \
      summary="Calico node handles networking and policy for Calico"

ARG ARCH=x86_64
ARG IPTABLES_VER=1.8.2-9
ARG RUNIT_VER=2.1.2

# Copy in runit binaries
COPY --from=centos  /tmp/admin/runit-${RUNIT_VER}/command/* /usr/local/bin/

# Copy in our rpms
COPY --from=centos  /root/rpmbuild/RPMS/${ARCH}/* /tmp/rpms/

COPY centos.repo /etc/yum.repos.d/

# Install everything but conntrack, making sure that we're using only ubi repos.
RUN microdnf --disablerepo=centos-8-base-os --disablerepo=centos-8-appstream install --nodocs \
    # Needed for iptables
    libpcap libmnl libnfnetlink libnftnl libnetfilter_conntrack \
    ipset \
    iputils \
    # Need arp
    net-tools \
    # Need kmod to ensure ip6tables-save works correctly
    kmod \
    # Also needed (provides utilities for browsing procfs like ps)
    procps \
    iproute \
    # Needed for runit startup script
    which && \
    microdnf clean all && \
    # Install iptables via rpms. The libs must be force installed because the iptables source RPM has the release
    # version '9.el8_0.1' while the existing iptables-libs (pulled in by the iputils package) has version '9.el8.1'.
    rpm --force -i /tmp/rpms/iptables-libs-${IPTABLES_VER}.el8.1.${ARCH}.rpm && \
    rpm -i /tmp/rpms/iptables-${IPTABLES_VER}.el8.1.${ARCH}.rpm

# Install conntrack from CentOS repos.
RUN microdnf install --nodocs \
    # Needed for conntrack
    libnetfilter_cthelper libnetfilter_cttimeout libnetfilter_queue \
    conntrack-tools && \
    microdnf clean all

# Copy our bird binaries in
COPY --from=bird /bird* /bin/

# Copy in the filesystem - this contains felix, calico-bgp-daemon, licenses, etc...
COPY filesystem/ /

# Copy in the calico-node binary
COPY dist/bin/calico-node-amd64 /bin/calico-node

COPY --from=bpftool /bpftool /bin

CMD ["start_runit"]
